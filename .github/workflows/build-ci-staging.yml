name: CI/CD Staging Environtment
on:
  push:
    tags:
      - "v*.*.*"

env:
  REGISTRY_NAME: kodinganku.azurecr.io
  KUBE_NAMESPACE: resto-app
  APP_NAME: resto-backend-staging
  CHAT_ID_TELEGRAM: -415989714

jobs:
  build-and-deploy:
    if: github.event.base_ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: prerun workflow notif tele
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.CHAT_ID_TELEGRAM }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "Start Workflow $GITHUB_WORKFLOW on $GITHUB_REPOSITORY with branch $GITHUB_REF : $GITHUB_SHA.Initiated by $GITHUB_ACTOR"
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: staging
      - name: Set env for Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set Up Docker BuildX
        uses: docker/setup-buildx-action@v1
      - name: Login to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_NAME }}
          username: ${{ secrets.CRAZURE_USERNAME }}
          password: ${{ secrets.CRAZURE_TOKEN }}
      - name: Set Up Environtment to Staging
        uses: canastro/copy-file-action@master
        with:
          source: ".env.staging"
          target: ".env"

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.REGISTRY_NAME }}/resto-backend:${{ env.RELEASE_VERSION }}
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Deploy to kubernetes cluster
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: set image --record deployment/${{ env.APP_NAME }} -n ${{ env.KUBE_NAMESPACE }} resto-backend-container=${{ env.REGISTRY_NAME }}/resto-backend:${{ env.RELEASE_VERSION }}
      - name: Verify deployment
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: rollout status deployment/${{ env.APP_NAME }} -n ${{ env.KUBE_NAMESPACE }}
      - name: postrun workflow notif tele
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.CHAT_ID_TELEGRAM }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "Finish Workflow $GITHUB_WORKFLOW on $GITHUB_REPOSITORY with branch $GITHUB_REF : $GITHUB_SHA.Initiated by $GITHUB_ACTOR"
